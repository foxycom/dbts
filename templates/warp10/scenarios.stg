lastTimeActivelyDriven(readToken, class, end, start, threshold) ::= <<
'<readToken>'
'read_token' STORE

[
  [
    [
      $read_token
      '<class>'
      {}
      '<end>'
      '<start>'
    ] FETCH
    bucketizer.mean
    0 1 s 0
  ] BUCKETIZE NONEMPTY
  <threshold>
  mapper.gt
  0 0 0
] MAP RSORT
\<%
  DROP 'gts' STORE
  [] 'list' STORE
  $list $gts LABELS 'bike_id' GET +! DROP
  $list $gts LASTTICK +! DROP
  $list
%>
LMAP
>>

airPollutionHeatMap(readToken, class, sensor, end, start) ::= <<
'<readToken>'
'read_token' STORE

[
    $read_token
    '<class>'
    { 'sensor_id' '<sensor>' }
    '<end>'
    '<start>'
] FETCH

\<%
    DROP 'gts' STORE
    [
        $gts
        bucketizer.mean
        0 1 s 0
    ]
    BUCKETIZE NONEMPTY

%> LMAP FLATTEN

[] 'list' STORE

\<%
    SWAP 'gts' STORE
    $gts LOCATIONS
    'latitudes' STORE
    'longitudes' STORE
    $gts VALUES 'values' STORE
    0 $values SIZE 1 -
    \<%
        'i' STORE
        $list [ $values $i GET $latitudes $i GET $longitudes $i GET ] +!
    %>
    FOR
%>
LFLATMAP
>>

offlineBikes(readToken, bikesNum, class, sensor, end, start) ::= <<
'<readToken>'
'read_token' STORE
[] 'bikes' STORE
0 <bikesNum> 1 -
\<%
  'i' STORE
  $bikes [ 'bike_' $i TOSTRING + ] APPEND DROP
%>
FOR
[] 'offlineBikes' STORE

[
  $read_token
  '<class>'
  { 'sensor_id' '<sensor>' }
  '<end>'
  '<start>'
] FETCH NONEMPTY

\<%
  DROP
  LABELS 'bike_id' GET
%>
LMAP 'gtsBikes' STORE

$bikes SIZE 1 - 'size' STORE
0 $size
\<%
   'i' STORE
   $bikes $i GET 'bike_id' STORE
   \<% $gtsBikes $bike_id CONTAINS SWAP DROP %>
   \<%  %>
   \<% $offlineBikes $bike_id +! DROP %>
   IFTE
%> FOR
$offlineBikes
>>

gpsPathScan(readToken, class, sensor, bike, end, start) ::= <<
'<readToken>'
'read_token' STORE

[
  $read_token
  '<class>'
  { 'bike_id' '<bike>' 'sensor_id' '<sensor>' }
  '<end>'
  '<start>'
] FETCH

0 GET 'gts' STORE
$gts TICKS
$gts LOCATIONS
>>

bikesInLocation(readToken, class, sensor, end, start) ::= <<
'<readToken>'
'read_token' STORE
'POLYGON ((13.4406567 48.5723195, 13.4373522 48.5707861, 13.4373522 48.5662708, 13.4443045 48.5645384, 13.4489393 48.5683155, 13.4492826 48.5710701, 13.4406567 48.5723195))' 0.1 false GEO.WKT 'area' STORE

[
  $read_token
  '<class>'
  { 'sensor_id' '<sensor>' }
  '<end>'
  '<start>'
] FETCH

[
  SWAP
  mapper.last
  MAXLONG MAXLONG 1
] MAP

[
  SWAP
  $area mapper.geo.within
  0 0 0
] MAP NONEMPTY
>>

downsample(readToken, class, sensor, bike, end, start) ::= <<
'<readToken>'
'read_token' STORE

[
  $read_token
  '<class>'
  { 'bike_id' '<bike>' 'sensor_id' '<sensor>' }
  '<end>'
  '<start>'
] FETCH

[
  SWAP
  bucketizer.mean
  0 1 m 0
] BUCKETIZE
>>

distanceDriven(readToken, class, bike, sensor, end, start, threshold) ::= <<
'<readToken>'
'read_token' STORE

[
  $read_token
  '<class>'
  { 'bike_id' '<bike>' 'sensor_id' '<sensor>' }
  '<end>'
  '<start>'
] FETCH

[
  SWAP
  bucketizer.mean
  0 1 s 0
] BUCKETIZE

[
  SWAP
  <threshold> mapper.gt
  0 0 0
] MAP

[
  SWAP
  mapper.hdist
  MAXLONG
  MAXLONG
  1
] MAP
>>

identifyTrips(readToken, class, bike, sensor, end, start, threshold) ::= <<
'<readToken>'
'read_token' STORE

[
  $read_token
  '<class>'
  { 'bike_id' '<bike>' 'sensor_id' '<sensor>' }
  '<end>'
  '<start>'
] FETCH

[
  SWAP
  bucketizer.mean
  0 1 s 0
] BUCKETIZE

[
  SWAP
  <threshold> mapper.gt
  0 0 0
] MAP
>>

lastKnownPosition(readToken, class, sensor) ::= <<
'<readToken>'
'read_token' STORE

[
  $read_token
  '<class>'
  { 'sensor_id' '<sensor>' }
  MAXLONG
  MINLONG
] FETCH
[
  SWAP
  mapper.last
  MAXLONG MAXLONG 1
] MAP
>>