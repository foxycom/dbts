script(readToken, bikesNum, class, sensor, end, start) ::= <<
'<readToken>'
'read_token' STORE
[] 'bikes' STORE
0 <bikesNum> 1 -
\<%
  'i' STORE
  $bikes [ 'bike_' $i TOSTRING + ] APPEND DROP
%>
FOR
[] 'offlineBikes' STORE

[
  $read_token
  '<class>'
  { 'sensor_id' '<sensor>' }
  '<end>'
  '<start>'
] FETCH NONEMPTY

\<%
  DROP
  LABELS 'bike_id' GET
%>
LMAP 'gtsBikes' STORE

$bikes SIZE 1 - 'size' STORE
0 $size
\<%
   'i' STORE
   $bikes $i GET 'bike_id' STORE
   \<% $gtsBikes $bike_id CONTAINS SWAP DROP %>
   \<%  %>
   \<% $offlineBikes $bike_id +! DROP %>
   IFTE
%> FOR
$offlineBikes
>>